	#21.09.2014
Release notes for version 0.15

This might be the last time I'll be writing these release notes for a
long time, possibly even the last one ever to be written by me for
this project.

The reason for this is the fact that this is the Castawesome version
0.15 and it will be the final patch for Castawesome (excluding possible
hotfixes). No more features will be added, unless a fix for Castawesome
bug number #1 is found. As you may know, the bug #1 is the desynced audio,
caused by either bugs in Pulseaudio/ALSA or FFmpeg/avconv.

I feel that it's pointless to improve the feature set of a program that
is inherently broken with no fixes in sight. It's sad to say goodbye
to a project you've been working on for a long time, but there always
comes a time to let go. Castawesome has been superceded by more advanced
pieces of software, mainly SimpleScreenRecorder and Open Broadcaster
Software.

Because this is probably the last feature update, I decided to make it
a good one. We have a lot of things to cover, so let's begin.

- Added ability to use a 3rd party services that are not on the list
- Added Picarto.tv as an officially supported service
- Show Capture Region is now a switch and not a text entry
- Design of Settings Dialog has been improved a bit
- Added webcam support and a dialog to place the webcam overlay

As you can see, we have a lot of new things to play with. But do consider
making the switch to a more advanced and less dead project. My personal
favourite is SimpleScreenRecorder. It's a very reliable tool and it
should cover your basic livestreaming and recording needs. Open Broadcaster
Software is also a good candidate, though at the moment it might be a bit
unstable.

That's all for me folks, hopefully you have enjoyed using Castawesome,
for I have enjoyed making it.

------------------------------------------------------------------------
	
	#29.05.2014
Version 0.14.7 is out!

After looking further into FFmpeg's features I found out that watermarking
doesn't require using two processes and a feature called filter_complex
allows creation of watermarks with reduced CPU usage. I have switched
Castawesome to use that and abandoned our own dirty technique.

So far this has shown increased framerates and reduced resource usage
across the board, so it's party time!

As I am now talking about the awesome stuff in FFmpeg, I would also like
to highlight some issues. First of all, I have received reports that
livestreams have desynchronized audio. Sadly, this is an issue I won't
be able to fix. Audio desyncs have been the Issue #1 with Castawesome
since the dawn of the project and the reason is our use of FFmpeg for
the backend. FFmpeg doesn't handle audio input from ALSA/Pulseaudio
properly and offers no way to drop or include samples to balance it.

As long as we use FFmpeg/avconv to encode and send the AV data we will
see desyncs. I can only hope that either LibAV or FFmpeg decides to fix
this or people don't encounter the issue, as I am incapable of fixing
these issues myself. This also means that, while we are approaching
version 0.99, I will never release version 1.0 of Castawesome, unless
we figure out another way to do our backend OR the projects provide us
with fixes.

------------------------------------------------------------------------

	#06.04.2014
Release notes for 0.14.5

As this new release has more new features than previous ones, I decided
to write more formal release notes for this one. Instead of focusing on
stability, like in the previous versions, I went all in on new tech that
I found out about (mainly piping FFmpeg output to another FFmpeg process)
and added something rather exciting. Here are the release notes:

- Added support for primitive watermarking through piping-technique
- Settings window has options for enabling/disabling watermarking and
  choosing the PNG file that will be used for watermarks
- The quality option is now renamed Compression and the choices are done
  through a drop-down menu instead of a text entry.
- Subprocessing has been updated to handle double encoding

I think watermarking is a huge step forwards, though the current
implementation is rather limited and it can cause lower framerates and
framedrops when you are streaming something more dynamic (eg. a game) but
if you have a more powerful computer or you want to stream something more
static, such as slower 2D games or text, then it should still work.

Hopefully you will enjoy this release!

Sami

-----------------------------------------------------------------------

	#01.01.2014
More Streaming Service Variety!

As of now Castawesome natively supports (that is without hacks) three
livestreaming services: Twitch.tv, Hitbox.tv and YouTube. I came up with
this idea when Twitch pretty much broke their servers and I had to use
YouTube's RTMP servers for a while. To use them, however, you had to
crack open your text editor and edit the avconv/ffmpeg parameters manually,
which is not user-friendly. You might remember that I originally wrote
Castawesome to escape the CLI avconv/ffmpeg scripts and that's what I
intend to do now.

As a side-note: happy new year! May it bring more livestreams and other
goodness to Linux users all over the world!

-----------------------------------------------------------------------

	#09.06.2013#
Previous multi-input audio update reverted

It seems I went ahead with the update too fast. According to my testing
the multi-input audio IS NOT YET working. When I tested it I messed with
the audio settings so that it simply picked up my voice from the stream
and made me think it worked fine, even though it really didn't.

I am sorry for causing any confusion and I hope to get this fixed eventually.
Until then you should use either this version, which has all additional
audio settings reverted back or the older 0.12.8 version.

Sami

-----------------------------------------------------------------------
	
	#05.06.2013#
We finally have multiple input audio!

When I was wondering about another problem regarding webcam usage in
live streams, I stumbled upon a forum post explaining how to use multiple
audio inputs with avconv. The solution was so simple, that I'm not sure
how I failed doing that.

I am not sure how well this thing works and if only one channel is
necessary for your stream, I suggest using only one channel, because
using multiple channels is not tested and the sound might get out of sync
but to what extend I have tested it, it seems to be working just fine.

Sami
